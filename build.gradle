buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:0.4.0'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'coveralls'
apply plugin: 'com.bmuschko.nexus'

defaultTasks 'build'

group = 'com.vtence.okay'
version = '0.1-SNAPSHOT'

def libs = [
        hamcrest         : 'org.hamcrest:java-hamcrest:2.0.0.0',
        hamcrest_junit   : 'org.hamcrest:hamcrest-junit:2.0.0.0@jar',
        junit            : 'junit:junit:4.12@jar'
]

repositories {
    mavenCentral()
}

def optionalDeps = []
ext {
    optional = { optionalDeps << it; it }
}

dependencies {
    compile libs.hamcrest, optional
    testCompile libs.junit
    testCompile libs.hamcrest_junit
}

task 'version' << {
    println version
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task coverage(dependsOn: ['test', 'jacocoTestReport'])

modifyPom {
    project {
        name 'Okay'
        description 'Validations in pure Java'
        url 'http://vtence.com/okay'
        packaging 'jar'
        licenses {
            license {
                name 'MIT License'
                url 'http://www.opensource.org/licenses/mit-license.php'
                distribution 'repo'
            }
        }
        scm {
            url 'https://github.com/testinfected/okay'
            connection 'scm:git:https://github.com/testinfected/okay.git'
            developerConnection 'scm:git@github.com:testinfected/okay.git'
        }
        developers {
            developer {
                id 'testinfected'
                name 'Vincent TencÃ©'
            }
        }

        optionalDeps.each { dep ->
            dependencies.find { it.artifactId == dep.name }.scope = 'optional'
        }

        // no need to publish test dependencies
        dependencies.removeAll { it.scope == "test" }
    }
}
